name: CI Workflow

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "yarn"

      - name: Create .env file
        working-directory: ./api
        run: |
          cat <<EOF > .env
          PORT=${{ secrets.PORT }}
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER=${{ secrets.MYSQL_USER }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          EOF

      - name: Wait for MySQL
        timeout-minutes: 5
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} --silent; then
              echo "MySQL is ready!"
              exit 0
            fi
            echo "Attempt $i/30: MySQL not ready. Retrying in 3 seconds..."
            sleep 3
          done
          echo "MySQL failed to start within timeout"
          exit 1

      - name: Restore API dependencies cache
        uses: actions/cache@v3
        with:
          path: ./api/node_modules
          key: ${{ runner.os }}-api-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-api-

      - name: Install API dependencies
        working-directory: ./api
        run: yarn install --frozen-lockfile

      - name: Lint API code
        working-directory: ./api
        run: yarn lint

      - name: Restore Client dependencies cache
        uses: actions/cache@v3
        with:
          path: ./client/node_modules
          key: ${{ runner.os }}-client-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-client-

      - name: Install Client dependencies
        working-directory: ./client
        run: yarn install --frozen-lockfile

      - name: Lint Client code
        working-directory: ./client
        run: yarn lint

      - name: Run tests
        working-directory: ./api
        env:
          NODE_ENV: test
        run: yarn test
